

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 27 01:24:40 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,space=0,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F1827 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0008                     bsr             equ	8
    47     0005                     fsr0h           equ	5
    48     0004                     fsr0l           equ	4
    49     0007                     fsr1h           equ	7
    50     0006                     fsr1l           equ	6
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0001                     indf1           equ	1
    54     000B                     intcon          equ	11
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0009                     wreg            equ	9
    60     0000                     INDF0           equ	0	;# 
    61     0001                     INDF1           equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR0L           equ	4	;# 
    65     0005                     FSR0H           equ	5	;# 
    66     0006                     FSR1L           equ	6	;# 
    67     0007                     FSR1H           equ	7	;# 
    68     0008                     BSR             equ	8	;# 
    69     0009                     WREG            equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PORTA           equ	12	;# 
    73     000D                     PORTB           equ	13	;# 
    74     0011                     PIR1            equ	17	;# 
    75     0012                     PIR2            equ	18	;# 
    76     0013                     PIR3            equ	19	;# 
    77     0014                     PIR4            equ	20	;# 
    78     0015                     TMR0            equ	21	;# 
    79     0016                     TMR1            equ	22	;# 
    80     0016                     TMR1L           equ	22	;# 
    81     0017                     TMR1H           equ	23	;# 
    82     0018                     T1CON           equ	24	;# 
    83     0019                     T1GCON          equ	25	;# 
    84     001A                     TMR2            equ	26	;# 
    85     001B                     PR2             equ	27	;# 
    86     001C                     T2CON           equ	28	;# 
    87     001E                     CPSCON0         equ	30	;# 
    88     001F                     CPSCON1         equ	31	;# 
    89     008C                     TRISA           equ	140	;# 
    90     008D                     TRISB           equ	141	;# 
    91     0091                     PIE1            equ	145	;# 
    92     0092                     PIE2            equ	146	;# 
    93     0093                     PIE3            equ	147	;# 
    94     0094                     PIE4            equ	148	;# 
    95     0095                     OPTION_REG      equ	149	;# 
    96     0096                     PCON            equ	150	;# 
    97     0097                     WDTCON          equ	151	;# 
    98     0098                     OSCTUNE         equ	152	;# 
    99     0099                     OSCCON          equ	153	;# 
   100     009A                     OSCSTAT         equ	154	;# 
   101     009B                     ADRES           equ	155	;# 
   102     009B                     ADRESL          equ	155	;# 
   103     009C                     ADRESH          equ	156	;# 
   104     009D                     ADCON0          equ	157	;# 
   105     009E                     ADCON1          equ	158	;# 
   106     010C                     LATA            equ	268	;# 
   107     010D                     LATB            equ	269	;# 
   108     0111                     CM1CON0         equ	273	;# 
   109     0112                     CM1CON1         equ	274	;# 
   110     0113                     CM2CON0         equ	275	;# 
   111     0114                     CM2CON1         equ	276	;# 
   112     0115                     CMOUT           equ	277	;# 
   113     0116                     BORCON          equ	278	;# 
   114     0117                     FVRCON          equ	279	;# 
   115     0118                     DACCON0         equ	280	;# 
   116     0119                     DACCON1         equ	281	;# 
   117     011A                     SRCON0          equ	282	;# 
   118     011B                     SRCON1          equ	283	;# 
   119     011D                     APFCON0         equ	285	;# 
   120     011E                     APFCON1         equ	286	;# 
   121     018C                     ANSELA          equ	396	;# 
   122     018D                     ANSELB          equ	397	;# 
   123     0191                     EEADR           equ	401	;# 
   124     0191                     EEADRL          equ	401	;# 
   125     0192                     EEADRH          equ	402	;# 
   126     0193                     EEDAT           equ	403	;# 
   127     0193                     EEDATL          equ	403	;# 
   128     0193                     EEDATA          equ	403	;# 
   129     0194                     EEDATH          equ	404	;# 
   130     0195                     EECON1          equ	405	;# 
   131     0196                     EECON2          equ	406	;# 
   132     0199                     RCREG           equ	409	;# 
   133     019A                     TXREG           equ	410	;# 
   134     019B                     SP1BRG          equ	411	;# 
   135     019B                     SP1BRGL         equ	411	;# 
   136     019B                     SPBRG           equ	411	;# 
   137     019B                     SPBRGL          equ	411	;# 
   138     019C                     SP1BRGH         equ	412	;# 
   139     019C                     SPBRGH          equ	412	;# 
   140     019D                     RCSTA           equ	413	;# 
   141     019E                     TXSTA           equ	414	;# 
   142     019F                     BAUDCON         equ	415	;# 
   143     020C                     WPUA            equ	524	;# 
   144     020D                     WPUB            equ	525	;# 
   145     0211                     SSP1BUF         equ	529	;# 
   146     0211                     SSPBUF          equ	529	;# 
   147     0212                     SSP1ADD         equ	530	;# 
   148     0212                     SSPADD          equ	530	;# 
   149     0213                     SSP1MSK         equ	531	;# 
   150     0213                     SSPMSK          equ	531	;# 
   151     0214                     SSP1STAT        equ	532	;# 
   152     0214                     SSPSTAT         equ	532	;# 
   153     0215                     SSP1CON1        equ	533	;# 
   154     0215                     SSPCON1         equ	533	;# 
   155     0215                     SSPCON          equ	533	;# 
   156     0216                     SSP1CON2        equ	534	;# 
   157     0216                     SSPCON2         equ	534	;# 
   158     0217                     SSP1CON3        equ	535	;# 
   159     0217                     SSPCON3         equ	535	;# 
   160     0219                     SSP2BUF         equ	537	;# 
   161     021A                     SSP2ADD         equ	538	;# 
   162     021B                     SSP2MSK         equ	539	;# 
   163     021C                     SSP2STAT        equ	540	;# 
   164     021D                     SSP2CON1        equ	541	;# 
   165     021E                     SSP2CON2        equ	542	;# 
   166     021F                     SSP2CON3        equ	543	;# 
   167     0291                     CCPR1           equ	657	;# 
   168     0291                     CCPR1L          equ	657	;# 
   169     0292                     CCPR1H          equ	658	;# 
   170     0293                     CCP1CON         equ	659	;# 
   171     0294                     PWM1CON         equ	660	;# 
   172     0295                     CCP1AS          equ	661	;# 
   173     0295                     ECCP1AS         equ	661	;# 
   174     0296                     PSTR1CON        equ	662	;# 
   175     0298                     CCPR2           equ	664	;# 
   176     0298                     CCPR2L          equ	664	;# 
   177     0299                     CCPR2H          equ	665	;# 
   178     029A                     CCP2CON         equ	666	;# 
   179     029B                     PWM2CON         equ	667	;# 
   180     029C                     CCP2AS          equ	668	;# 
   181     029C                     ECCP2AS         equ	668	;# 
   182     029D                     PSTR2CON        equ	669	;# 
   183     029E                     CCPTMRS         equ	670	;# 
   184     029E                     CCPTMRS0        equ	670	;# 
   185     0311                     CCPR3           equ	785	;# 
   186     0311                     CCPR3L          equ	785	;# 
   187     0312                     CCPR3H          equ	786	;# 
   188     0313                     CCP3CON         equ	787	;# 
   189     0318                     CCPR4           equ	792	;# 
   190     0318                     CCPR4L          equ	792	;# 
   191     0319                     CCPR4H          equ	793	;# 
   192     031A                     CCP4CON         equ	794	;# 
   193     0394                     IOCBP           equ	916	;# 
   194     0395                     IOCBN           equ	917	;# 
   195     0396                     IOCBF           equ	918	;# 
   196     039A                     CLKRCON         equ	922	;# 
   197     039C                     MDCON           equ	924	;# 
   198     039D                     MDSRC           equ	925	;# 
   199     039E                     MDCARL          equ	926	;# 
   200     039F                     MDCARH          equ	927	;# 
   201     0415                     TMR4            equ	1045	;# 
   202     0416                     PR4             equ	1046	;# 
   203     0417                     T4CON           equ	1047	;# 
   204     041C                     TMR6            equ	1052	;# 
   205     041D                     PR6             equ	1053	;# 
   206     041E                     T6CON           equ	1054	;# 
   207     0FE4                     STATUS_SHAD     equ	4068	;# 
   208     0FE5                     WREG_SHAD       equ	4069	;# 
   209     0FE6                     BSR_SHAD        equ	4070	;# 
   210     0FE7                     PCLATH_SHAD     equ	4071	;# 
   211     0FE8                     FSR0L_SHAD      equ	4072	;# 
   212     0FE9                     FSR0H_SHAD      equ	4073	;# 
   213     0FEA                     FSR1L_SHAD      equ	4074	;# 
   214     0FEB                     FSR1H_SHAD      equ	4075	;# 
   215     0FED                     STKPTR          equ	4077	;# 
   216     0FEE                     TOSL            equ	4078	;# 
   217     0FEF                     TOSH            equ	4079	;# 
   218     0000                     INDF0           equ	0	;# 
   219     0001                     INDF1           equ	1	;# 
   220     0002                     PCL             equ	2	;# 
   221     0003                     STATUS          equ	3	;# 
   222     0004                     FSR0L           equ	4	;# 
   223     0005                     FSR0H           equ	5	;# 
   224     0006                     FSR1L           equ	6	;# 
   225     0007                     FSR1H           equ	7	;# 
   226     0008                     BSR             equ	8	;# 
   227     0009                     WREG            equ	9	;# 
   228     000A                     PCLATH          equ	10	;# 
   229     000B                     INTCON          equ	11	;# 
   230     000C                     PORTA           equ	12	;# 
   231     000D                     PORTB           equ	13	;# 
   232     0011                     PIR1            equ	17	;# 
   233     0012                     PIR2            equ	18	;# 
   234     0013                     PIR3            equ	19	;# 
   235     0014                     PIR4            equ	20	;# 
   236     0015                     TMR0            equ	21	;# 
   237     0016                     TMR1            equ	22	;# 
   238     0016                     TMR1L           equ	22	;# 
   239     0017                     TMR1H           equ	23	;# 
   240     0018                     T1CON           equ	24	;# 
   241     0019                     T1GCON          equ	25	;# 
   242     001A                     TMR2            equ	26	;# 
   243     001B                     PR2             equ	27	;# 
   244     001C                     T2CON           equ	28	;# 
   245     001E                     CPSCON0         equ	30	;# 
   246     001F                     CPSCON1         equ	31	;# 
   247     008C                     TRISA           equ	140	;# 
   248     008D                     TRISB           equ	141	;# 
   249     0091                     PIE1            equ	145	;# 
   250     0092                     PIE2            equ	146	;# 
   251     0093                     PIE3            equ	147	;# 
   252     0094                     PIE4            equ	148	;# 
   253     0095                     OPTION_REG      equ	149	;# 
   254     0096                     PCON            equ	150	;# 
   255     0097                     WDTCON          equ	151	;# 
   256     0098                     OSCTUNE         equ	152	;# 
   257     0099                     OSCCON          equ	153	;# 
   258     009A                     OSCSTAT         equ	154	;# 
   259     009B                     ADRES           equ	155	;# 
   260     009B                     ADRESL          equ	155	;# 
   261     009C                     ADRESH          equ	156	;# 
   262     009D                     ADCON0          equ	157	;# 
   263     009E                     ADCON1          equ	158	;# 
   264     010C                     LATA            equ	268	;# 
   265     010D                     LATB            equ	269	;# 
   266     0111                     CM1CON0         equ	273	;# 
   267     0112                     CM1CON1         equ	274	;# 
   268     0113                     CM2CON0         equ	275	;# 
   269     0114                     CM2CON1         equ	276	;# 
   270     0115                     CMOUT           equ	277	;# 
   271     0116                     BORCON          equ	278	;# 
   272     0117                     FVRCON          equ	279	;# 
   273     0118                     DACCON0         equ	280	;# 
   274     0119                     DACCON1         equ	281	;# 
   275     011A                     SRCON0          equ	282	;# 
   276     011B                     SRCON1          equ	283	;# 
   277     011D                     APFCON0         equ	285	;# 
   278     011E                     APFCON1         equ	286	;# 
   279     018C                     ANSELA          equ	396	;# 
   280     018D                     ANSELB          equ	397	;# 
   281     0191                     EEADR           equ	401	;# 
   282     0191                     EEADRL          equ	401	;# 
   283     0192                     EEADRH          equ	402	;# 
   284     0193                     EEDAT           equ	403	;# 
   285     0193                     EEDATL          equ	403	;# 
   286     0193                     EEDATA          equ	403	;# 
   287     0194                     EEDATH          equ	404	;# 
   288     0195                     EECON1          equ	405	;# 
   289     0196                     EECON2          equ	406	;# 
   290     0199                     RCREG           equ	409	;# 
   291     019A                     TXREG           equ	410	;# 
   292     019B                     SP1BRG          equ	411	;# 
   293     019B                     SP1BRGL         equ	411	;# 
   294     019B                     SPBRG           equ	411	;# 
   295     019B                     SPBRGL          equ	411	;# 
   296     019C                     SP1BRGH         equ	412	;# 
   297     019C                     SPBRGH          equ	412	;# 
   298     019D                     RCSTA           equ	413	;# 
   299     019E                     TXSTA           equ	414	;# 
   300     019F                     BAUDCON         equ	415	;# 
   301     020C                     WPUA            equ	524	;# 
   302     020D                     WPUB            equ	525	;# 
   303     0211                     SSP1BUF         equ	529	;# 
   304     0211                     SSPBUF          equ	529	;# 
   305     0212                     SSP1ADD         equ	530	;# 
   306     0212                     SSPADD          equ	530	;# 
   307     0213                     SSP1MSK         equ	531	;# 
   308     0213                     SSPMSK          equ	531	;# 
   309     0214                     SSP1STAT        equ	532	;# 
   310     0214                     SSPSTAT         equ	532	;# 
   311     0215                     SSP1CON1        equ	533	;# 
   312     0215                     SSPCON1         equ	533	;# 
   313     0215                     SSPCON          equ	533	;# 
   314     0216                     SSP1CON2        equ	534	;# 
   315     0216                     SSPCON2         equ	534	;# 
   316     0217                     SSP1CON3        equ	535	;# 
   317     0217                     SSPCON3         equ	535	;# 
   318     0219                     SSP2BUF         equ	537	;# 
   319     021A                     SSP2ADD         equ	538	;# 
   320     021B                     SSP2MSK         equ	539	;# 
   321     021C                     SSP2STAT        equ	540	;# 
   322     021D                     SSP2CON1        equ	541	;# 
   323     021E                     SSP2CON2        equ	542	;# 
   324     021F                     SSP2CON3        equ	543	;# 
   325     0291                     CCPR1           equ	657	;# 
   326     0291                     CCPR1L          equ	657	;# 
   327     0292                     CCPR1H          equ	658	;# 
   328     0293                     CCP1CON         equ	659	;# 
   329     0294                     PWM1CON         equ	660	;# 
   330     0295                     CCP1AS          equ	661	;# 
   331     0295                     ECCP1AS         equ	661	;# 
   332     0296                     PSTR1CON        equ	662	;# 
   333     0298                     CCPR2           equ	664	;# 
   334     0298                     CCPR2L          equ	664	;# 
   335     0299                     CCPR2H          equ	665	;# 
   336     029A                     CCP2CON         equ	666	;# 
   337     029B                     PWM2CON         equ	667	;# 
   338     029C                     CCP2AS          equ	668	;# 
   339     029C                     ECCP2AS         equ	668	;# 
   340     029D                     PSTR2CON        equ	669	;# 
   341     029E                     CCPTMRS         equ	670	;# 
   342     029E                     CCPTMRS0        equ	670	;# 
   343     0311                     CCPR3           equ	785	;# 
   344     0311                     CCPR3L          equ	785	;# 
   345     0312                     CCPR3H          equ	786	;# 
   346     0313                     CCP3CON         equ	787	;# 
   347     0318                     CCPR4           equ	792	;# 
   348     0318                     CCPR4L          equ	792	;# 
   349     0319                     CCPR4H          equ	793	;# 
   350     031A                     CCP4CON         equ	794	;# 
   351     0394                     IOCBP           equ	916	;# 
   352     0395                     IOCBN           equ	917	;# 
   353     0396                     IOCBF           equ	918	;# 
   354     039A                     CLKRCON         equ	922	;# 
   355     039C                     MDCON           equ	924	;# 
   356     039D                     MDSRC           equ	925	;# 
   357     039E                     MDCARL          equ	926	;# 
   358     039F                     MDCARH          equ	927	;# 
   359     0415                     TMR4            equ	1045	;# 
   360     0416                     PR4             equ	1046	;# 
   361     0417                     T4CON           equ	1047	;# 
   362     041C                     TMR6            equ	1052	;# 
   363     041D                     PR6             equ	1053	;# 
   364     041E                     T6CON           equ	1054	;# 
   365     0FE4                     STATUS_SHAD     equ	4068	;# 
   366     0FE5                     WREG_SHAD       equ	4069	;# 
   367     0FE6                     BSR_SHAD        equ	4070	;# 
   368     0FE7                     PCLATH_SHAD     equ	4071	;# 
   369     0FE8                     FSR0L_SHAD      equ	4072	;# 
   370     0FE9                     FSR0H_SHAD      equ	4073	;# 
   371     0FEA                     FSR1L_SHAD      equ	4074	;# 
   372     0FEB                     FSR1H_SHAD      equ	4075	;# 
   373     0FED                     STKPTR          equ	4077	;# 
   374     0FEE                     TOSL            equ	4078	;# 
   375     0FEF                     TOSH            equ	4079	;# 
   376     000B                     _INTCONbits     set	11
   377     0011                     _PIR1bits       set	17
   378     008B                     _SSP1IF         set	139
   379     008C                     _TRISAbits      set	140
   380     0099                     _OSCCON         set	153
   381     008D                     _TRISBbits      set	141
   382     0091                     _PIE1bits       set	145
   383     048B                     _SSP1IE         set	1163
   384     010C                     _LATAbits       set	268
   385     0211                     _SSP1BUF        set	529
   386     0214                     _SSP1STATbits   set	532
   387     0215                     _SSP1CON1bits   set	533
   388     0212                     _SSP1ADD        set	530
   389     0214                     _SSP1STAT       set	532
   390     0216                     _SSP1CON2       set	534
   391     0215                     _SSP1CON1       set	533
   392                           
   393                           	psect	cinit
   394     0048                     start_initialization:	
   395                           ; #config settings
   396                           
   397     0048                     __initialization:
   398     0048                     end_of_initialization:	
   399                           ;End of C runtime variable initialization code
   400                           
   401     0048                     __end_of__initialization:
   402     0048  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   403     0049  0020               	movlb	0
   404     004A  3180  284C         	ljmp	_main	;jump to C main() function
   405                           
   406                           	psect	cstackCOMMON
   407     0070                     __pcstackCOMMON:
   408     0070                     ?_i2c_slave_init:
   409     0070                     ?_main:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?_isr:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     isr@dummy:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0070                     ??_isr:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 1 bytes @ 0x0
   423     0070                     	ds	1
   424     0071                     isr@dummy_301:
   425                           
   426                           ; 1 bytes @ 0x1
   427     0071                     	ds	1
   428     0072                     isr@data:
   429                           
   430                           ; 1 bytes @ 0x2
   431     0072                     	ds	1
   432     0073                     ??_i2c_slave_init:
   433     0073                     ??_main:	
   434                           ; 1 bytes @ 0x3
   435                           
   436                           
   437                           ; 1 bytes @ 0x3
   438     0073                     	ds	2
   439                           
   440                           	psect	maintext
   441     004C                     __pmaintext:	
   442 ;;
   443 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 33 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0, pclath, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : B1F/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   461 ;;      Params:         0       0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0
   463 ;;      Temps:          2       0       0       0       0       0
   464 ;;      Totals:         2       0       0       0       0       0
   465 ;;Total ram usage:        2 bytes
   466 ;; Hardware stack levels required when called: 2
   467 ;; This function calls:
   468 ;;		_i2c_slave_init
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474     004C                     _main:	
   475                           ;psect for function _main
   476                           
   477     004C                     l677:	
   478                           ;incstack = 0
   479                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   480                           
   481                           
   482                           ;main.c: 34: 
   483     004C  3060               	movlw	96
   484     004D  0021               	movlb	1	; select bank1
   485     004E  0099               	movwf	25	;volatile
   486     004F                     l679:
   487                           
   488                           ;main.c: 35: 
   489     004F  3180  2071  3180   	fcall	_i2c_slave_init
   490     0052                     l681:
   491                           
   492                           ;main.c: 38:             volatile uint8_t dummy = SSP1BUF;
   493     0052  0021               	movlb	1	; select bank1
   494     0053  108C               	bcf	12,1	;volatile
   495     0054                     l683:
   496                           
   497                           ;main.c: 39:         }
   498     0054  0022               	movlb	2	; select bank2
   499     0055  148C               	bsf	12,1	;volatile
   500     0056                     l685:
   501                           
   502                           ;main.c: 40: 
   503     0056  3006               	movlw	6
   504     0057  00F4               	movwf	??_main+1
   505     0058  3013               	movlw	19
   506     0059  00F3               	movwf	??_main
   507     005A  30AE               	movlw	174
   508     005B                     u107:
   509     005B  0B89               	decfsz	9,f
   510     005C  285B               	goto	u107
   511     005D  0BF3               	decfsz	??_main,f
   512     005E  285B               	goto	u107
   513     005F  0BF4               	decfsz	??_main+1,f
   514     0060  285B               	goto	u107
   515     0061                     l687:
   516                           
   517                           ;main.c: 41:         else if (SSP1STATbits.D_nA && !SSP1STATbits.R_nW) {
   518     0061  0022               	movlb	2	; select bank2
   519     0062  108C               	bcf	12,1	;volatile
   520     0063                     l689:
   521                           
   522                           ;main.c: 42:             uint8_t data = SSP1BUF;
   523     0063  3006               	movlw	6
   524     0064  00F4               	movwf	??_main+1
   525     0065  3013               	movlw	19
   526     0066  00F3               	movwf	??_main
   527     0067  30AE               	movlw	174
   528     0068                     u117:
   529     0068  0B89               	decfsz	9,f
   530     0069  2868               	goto	u117
   531     006A  0BF3               	decfsz	??_main,f
   532     006B  2868               	goto	u117
   533     006C  0BF4               	decfsz	??_main+1,f
   534     006D  2868               	goto	u117
   535     006E                     l44:	
   536                           ;main.c: 46:             } else if (data == 0x01) {
   537                           
   538     006E                     l45:
   539     006E  286E               	goto	l44
   540     006F  3180  2846         	ljmp	start
   541     0071                     __end_of_main:
   542                           
   543                           	psect	text1
   544     0071                     __ptext1:	
   545 ;; *************** function _i2c_slave_init *****************
   546 ;; Defined at:
   547 ;;		line 39 in file "./i2c_init_config.h"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		status,2
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   561 ;;      Params:         0       0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; Hardware stack levels required when called: 1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_main
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575     0071                     _i2c_slave_init:	
   576                           ;psect for function _i2c_slave_init
   577                           
   578     0071                     l669:	
   579                           ;incstack = 0
   580                           ; Regs used in _i2c_slave_init: [status,2]
   581                           
   582                           
   583                           ;./i2c_init_config.h: 41:     PIE1bits.SSP1IE = 1;
   584     0071  0021               	movlb	1	; select bank1
   585     0072  1591               	bsf	17,3	;volatile
   586                           
   587                           ;./i2c_init_config.h: 42:     PIR1bits.SSP1IF = 0;
   588     0073  0020               	movlb	0	; select bank0
   589     0074  1191               	bcf	17,3	;volatile
   590                           
   591                           ;./i2c_init_config.h: 45:     INTCONbits.PEIE = 1;
   592     0075  170B               	bsf	11,6	;volatile
   593                           
   594                           ;./i2c_init_config.h: 46:     INTCONbits.GIE = 1;
   595     0076  178B               	bsf	11,7	;volatile
   596                           
   597                           ;./i2c_init_config.h: 49:     TRISBbits.TRISB1 = 1;
   598     0077  0021               	movlb	1	; select bank1
   599     0078  148D               	bsf	13,1	;volatile
   600                           
   601                           ;./i2c_init_config.h: 50:     TRISBbits.TRISB4 = 1;
   602     0079  160D               	bsf	13,4	;volatile
   603                           
   604                           ;./i2c_init_config.h: 52:     SSP1CON1 = 0b00110110;
   605     007A  3036               	movlw	54
   606     007B  0024               	movlb	4	; select bank4
   607     007C  0095               	movwf	21	;volatile
   608     007D                     l671:
   609                           
   610                           ;./i2c_init_config.h: 53:     SSP1CON2 = 0;
   611     007D  0196               	clrf	22	;volatile
   612                           
   613                           ;./i2c_init_config.h: 54:     SSP1STAT = 0;
   614     007E  0194               	clrf	20	;volatile
   615     007F                     l673:
   616                           
   617                           ;./i2c_init_config.h: 56:     SSP1ADD = (0x69 << 1);
   618     007F  30D2               	movlw	210
   619     0080  0092               	movwf	18	;volatile
   620     0081                     l675:
   621                           
   622                           ;./i2c_init_config.h: 58:     SSP1CON1bits.SSPEN = 1;
   623     0081  1695               	bsf	21,5	;volatile
   624     0082                     l39:
   625     0082  0008               	return
   626     0083                     __end_of_i2c_slave_init:
   627                           
   628                           	psect	intentry
   629     0004                     __pintentry:	
   630 ;; *************** function _isr *****************
   631 ;; Defined at:
   632 ;;		line 54 in file "main.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  dummy           1    1[COMMON] volatile unsigned char 
   637 ;;  data            1    2[COMMON] unsigned char 
   638 ;;  dummy           1    0[COMMON] volatile unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   648 ;;      Params:         0       0       0       0       0       0
   649 ;;      Locals:         3       0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0       0
   651 ;;      Totals:         3       0       0       0       0       0
   652 ;;Total ram usage:        3 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		Interrupt level 1
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661     0004                     _isr:
   662                           
   663                           ;incstack = 0
   664     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   665                           
   666                           ; Regs used in _isr: [wreg+status,2+status,0]
   667     0005  3180               	pagesel	$
   668     0006                     i1l691:
   669                           
   670                           ;main.c: 55:             SSP1CON1bits.CKP = 1;
   671     0006  0020               	movlb	0	; select bank0
   672     0007  1D91               	btfss	17,3	;volatile
   673     0008  280A               	goto	u1_21
   674     0009  280B               	goto	u1_20
   675     000A                     u1_21:
   676     000A  2844               	goto	i1l61
   677     000B                     u1_20:
   678     000B                     i1l693:
   679     000B  0021               	movlb	1	; select bank1
   680     000C  1D91               	btfss	17,3	;volatile
   681     000D  280F               	goto	u2_21
   682     000E  2810               	goto	u2_20
   683     000F                     u2_21:
   684     000F  2844               	goto	i1l61
   685     0010                     u2_20:
   686     0010                     i1l695:
   687                           
   688                           ;main.c: 58:         SSP1IF = 0;
   689     0010  0024               	movlb	4	; select bank4
   690     0011  1A94               	btfsc	20,5	;volatile
   691     0012  2814               	goto	u3_21
   692     0013  2815               	goto	u3_20
   693     0014                     u3_21:
   694     0014  281C               	goto	i1l53
   695     0015                     u3_20:
   696     0015                     i1l697:
   697     0015  1914               	btfsc	20,2	;volatile
   698     0016  2818               	goto	u4_21
   699     0017  2819               	goto	u4_20
   700     0018                     u4_21:
   701     0018  281C               	goto	i1l53
   702     0019                     u4_20:
   703     0019                     i1l699:
   704                           
   705                           ;main.c: 60: }
   706     0019  0811               	movf	17,w	;volatile
   707     001A  00F0               	movwf	isr@dummy	;volatile
   708     001B  2842               	goto	i1l721
   709     001C                     i1l53:
   710     001C  1E94               	btfss	20,5	;volatile
   711     001D  281F               	goto	u5_21
   712     001E  2820               	goto	u5_20
   713     001F                     u5_21:
   714     001F  2839               	goto	i1l55
   715     0020                     u5_20:
   716     0020                     i1l701:
   717     0020  1914               	btfsc	20,2	;volatile
   718     0021  2823               	goto	u6_21
   719     0022  2824               	goto	u6_20
   720     0023                     u6_21:
   721     0023  2839               	goto	i1l55
   722     0024                     u6_20:
   723     0024                     i1l703:
   724     0024  0811               	movf	17,w	;volatile
   725     0025  00F2               	movwf	isr@data
   726     0026                     i1l705:
   727     0026  0022               	movlb	2	; select bank2
   728     0027  148C               	bsf	12,1	;volatile
   729     0028                     i1l707:
   730     0028  3002               	movlw	2
   731     0029  0672               	xorwf	isr@data,w
   732     002A  1D03               	btfss	3,2
   733     002B  282D               	goto	u7_21
   734     002C  282E               	goto	u7_20
   735     002D                     u7_21:
   736     002D  2830               	goto	i1l711
   737     002E                     u7_20:
   738     002E                     i1l709:
   739     002E  148C               	bsf	12,1	;volatile
   740     002F  2836               	goto	i1l57
   741     0030                     i1l711:
   742     0030  0372               	decf	isr@data,w
   743     0031  1D03               	btfss	3,2
   744     0032  2834               	goto	u8_21
   745     0033  2835               	goto	u8_20
   746     0034                     u8_21:
   747     0034  2836               	goto	i1l57
   748     0035                     u8_20:
   749     0035                     i1l713:
   750     0035  108C               	bcf	12,1	;volatile
   751     0036                     i1l57:
   752     0036  0024               	movlb	4	; select bank4
   753     0037  1615               	bsf	21,4	;volatile
   754     0038  2842               	goto	i1l721
   755     0039                     i1l55:
   756     0039  1D14               	btfss	20,2	;volatile
   757     003A  283C               	goto	u9_21
   758     003B  283D               	goto	u9_20
   759     003C                     u9_21:
   760     003C  2842               	goto	i1l721
   761     003D                     u9_20:
   762     003D                     i1l715:
   763     003D  0811               	movf	17,w	;volatile
   764     003E  00F1               	movwf	isr@dummy_301	;volatile
   765     003F                     i1l717:
   766     003F  3042               	movlw	66
   767     0040  0091               	movwf	17	;volatile
   768     0041                     i1l719:
   769     0041  1615               	bsf	21,4	;volatile
   770     0042                     i1l721:
   771     0042  0020               	movlb	0	; select bank0
   772     0043  1191               	bcf	17,3	;volatile
   773     0044                     i1l61:
   774     0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   775     0045  0009               	retfie
   776     0046                     __end_of_isr:
   777     0001                     ___latbits      equ	1
   778     007E                     btemp           set	126	;btemp
   779     007E                     int$flags       set	126
   780     007E                     wtemp0          set	126
   781                           
   782                           	psect	config
   783                           
   784                           ;Config register CONFIG1 @ 0x8007
   785                           ;	Oscillator Selection
   786                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   787                           ;	Watchdog Timer Enable
   788                           ;	WDTE = OFF, WDT disabled
   789                           ;	Power-up Timer Enable
   790                           ;	PWRTE = ON, PWRT enabled
   791                           ;	MCLR Pin Function Select
   792                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   793                           ;	Flash Program Memory Code Protection
   794                           ;	CP = 0x1, unprogrammed default
   795                           ;	Data Memory Code Protection
   796                           ;	CPD = 0x1, unprogrammed default
   797                           ;	Brown-out Reset Enable
   798                           ;	BOREN = OFF, Brown-out Reset disabled
   799                           ;	Clock Out Enable
   800                           ;	CLKOUTEN = 0x1, unprogrammed default
   801                           ;	Internal/External Switchover
   802                           ;	IESO = 0x1, unprogrammed default
   803                           ;	Fail-Safe Clock Monitor Enable
   804                           ;	FCMEN = 0x1, unprogrammed default
   805     8007                     	org	32775
   806     8007  39C4               	dw	14788
   807                           
   808                           ;Config register CONFIG2 @ 0x8008
   809                           ;	Flash Memory Self-Write Protection
   810                           ;	WRT = 0x3, unprogrammed default
   811                           ;	PLL Enable
   812                           ;	PLLEN = 0x1, unprogrammed default
   813                           ;	Stack Overflow/Underflow Reset Enable
   814                           ;	STVREN = 0x1, unprogrammed default
   815                           ;	Brown-out Reset Voltage Selection
   816                           ;	BORV = 0x1, unprogrammed default
   817                           ;	Low-Voltage Programming Enable
   818                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   819     8008                     	org	32776
   820     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                     _i2c_slave_init
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_slave_init

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            48      0       0      0.0%
BIGRAM             368      0       0      0.0%
COMMON              14      5       5     35.7%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 27 01:24:40 2025

                     l44 006E                       l45 006E                       l39 0082  
                    l671 007D                      l673 007F                      l681 0052  
                    l675 0081                      l683 0054                      l669 0071  
                    l685 0056                      l677 004C                      l687 0061  
                    l679 004F                      l689 0063                      u107 005B  
                    u117 0068                      _isr 0004                      wreg 0009  
                   ?_isr 0070                     i1l53 001C                     i1l61 0044  
                   i1l55 0039                     i1l57 0036                     u1_20 000B  
                   u1_21 000A                     u2_20 0010                     u2_21 000F  
                   u3_20 0015                     u3_21 0014                     u4_20 0019  
                   u4_21 0018                     u5_20 0020                     u5_21 001F  
                   u6_20 0024                     u6_21 0023                     u7_20 002E  
                   u7_21 002D                     u8_20 0035                     u8_21 0034  
                   u9_20 003D                     u9_21 003C                     _main 004C  
                   btemp 007E                     start 0046                    ??_isr 0070  
                  ?_main 0070                    i1l701 0020                    i1l711 0030  
                  i1l703 0024                    i1l713 0035                    i1l705 0026  
                  i1l721 0042                    i1l715 003D                    i1l707 0028  
                  i1l717 003F                    i1l709 002E                    i1l719 0041  
                  i1l691 0006                    i1l693 000B                    i1l695 0010  
                  i1l697 0015                    i1l699 0019                    status 0003  
                  wtemp0 007E          __initialization 0048             __end_of_main 0071  
                 ??_main 0073           _i2c_slave_init 0071                   _OSCCON 0099  
                 _SSP1IE 048B                   _SSP1IF 008B   __end_of_i2c_slave_init 0083  
__end_of__initialization 0048           __pcstackCOMMON 0070          ?_i2c_slave_init 0070  
             __pmaintext 004C               __pintentry 0004                  _SSP1ADD 0212  
           isr@dummy_301 0071                  _SSP1BUF 0211                  __ptext1 0071  
   end_of_initialization 0048                  isr@data 0072                _TRISAbits 008C  
              _TRISBbits 008D         ??_i2c_slave_init 0073      start_initialization 0048  
            __end_of_isr 0046                ___latbits 0001                 _LATAbits 010C  
               _PIE1bits 0091                 _PIR1bits 0011                 _SSP1CON1 0215  
               _SSP1CON2 0216                 _SSP1STAT 0214             _SSP1CON1bits 0215  
               int$flags 007E             _SSP1STATbits 0214               _INTCONbits 000B  
               isr@dummy 0070                 intlevel1 0000  
